apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "terra-daemon.fullname" . }}-scripts
data:
  snapshot.sh: |
    #!/bin/sh

    set -euo pipefail

    # skip snapshot pull if we already have a data directory
    if [ -d "/root/.terra/data" ]; then
      # delete snapshot archive if it exists
      rm -f /root/.terra/*.lz4
      exit 0
    fi

    cd /root/.terra
    apk add aria2 curl jq lz4

    # fetch snapshot url
    URL=`curl -s https://quicksync.io/terra.json|jq -r ".[] |select(.file==\"columbus-5-pruned\")|select (.mirror==\"$QUICKSYNC_MIRROR\")|.url"`

    # clean stale snapshots
    if ls /root/.terra/columbus-5-* >/dev/null 2>&1; then
      ls /root/.terra/columbus-5-* | while read line; do
        if [ "$(basename $URL)" = "$(basename $line)" ] || [ "$(basename $URL).aria2" = "$(basename $line)" ]; then
          echo "leaving snapshot to resume: $line"
        else
          echo "cleaning stale snapshot: $line"
          rm $line
        fi
      done
    fi

    # pull snapshot
    aria2c -c -x5 $URL
    lz4 -d `basename $URL` | tar xf -
    rm -f /root/.terra/*.lz4

  init.sh: |
    #!/bin/sh

    set -euo pipefail

    GENESIS_URL="https://columbus-genesis.s3.ap-northeast-1.amazonaws.com/columbus-5-genesis.json"
    GENESIS_PATH="/root/.terra/config/genesis.json"
    ADDRBOOK_URL="https://network.terra.dev/addrbook.json"
    ADDRBOOK_PATH="/root/.terra/config/addrbook.json"

    # Memory leak fix
    if [ -f ~/.terra/config/app.toml ]; then
      sed -i -e "s/contract-memory-cache-size.*/contract-memory-cache-size = 300/g" ~/.terra/config/app.toml
    fi

    if [ ! -f $GENESIS_PATH ]; then
      mkdir -p $(dirname $GENESIS_PATH)
      wget -O $GENESIS_PATH $GENESIS_URL
    fi

    # Fetch address book
    wget -O $ADDRBOOK_PATH $ADDRBOOK_URL

  probe.sh: |
    #!/bin/sh

    set -euo pipefail

    FILE=/root/.terra/.probe_last_height
    ENDPOINT=localhost:$TERRA_DAEMON_SERVICE_PORT/status

    STATUS=$(curl -sL --fail -m 10 "$ENDPOINT") || exit 1
    if [ ! -f "$FILE" ]; then
      echo "$STATUS" | jq -r ".result.sync_info.latest_block_height" >$FILE
      exit 1
    fi

    OLD=$(cat $FILE)
    echo "$STATUS" | jq -r ".result.sync_info.latest_block_height" > $FILE
    CURRENT=$(cat $FILE)
    [ "$OLD" == "$CURRENT" ] && exit 1 || exit 0
