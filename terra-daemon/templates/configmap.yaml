apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "terra-daemon.fullname" . }}-scripts
data:
  snapshot.sh: |
    # skip snapshot pull if we already have a data directory
    if [ -d "/root/.terra/data" ]; then
      exit 0
    fi

    cd /root/.terra
    apk add aria2 curl jq lz4

    # pull snapshot
    URL=`curl https://quicksync.io/terra.json|jq -r ".[] |select(.file==\"columbus-5-default\")|select (.mirror==\"$QUICKSYNC_MIRROR\")|.url"`
    aria2c -x5 $URL
    lz4 -d `basename $URL` | tar xf -

  init.sh: |
    GENESIS_URL="https://columbus-genesis.s3.ap-northeast-1.amazonaws.com/columbus-5-genesis.json"
    GENESIS_PATH="/root/.terra/config/genesis.json"
    ADDRBOOK_URL="https://network.terra.dev/addrbook.json"
    ADDRBOOK_PATH="/root/.terra/config/addrbook.json"

    # Memory leak fix
    sed -i -e "s/contract-memory-cache-size.*/contract-memory-cache-size = 300/g" ~/.terra/config/app.toml

    if [ ! -f $GENESIS_PATH ]; then
      mkdir -p $(dirname $GENESIS_PATH)
      wget -O $GENESIS_PATH $GENESIS_URL
    fi

    # Fetch address book
    wget -O $ADDRBOOK_PATH $ADDRBOOK_URL
   
  probe.sh: |
    #!/bin/bash

    FILE=/root/.terra/.probe_last_height
    ENDPOINT=localhost:$TERRA_DAEMON_SERVICE_PORT/status

    STATUS=$(curl -sL --fail -m 10 "$ENDPOINT") || exit 1
    if [ ! -f "$FILE" ]; then
      echo "$STATUS" | jq -r ".result.sync_info.latest_block_height" >$FILE
      exit 1
    fi

    OLD=$(cat $FILE)
    echo "$STATUS" | jq -r ".result.sync_info.latest_block_height" > $FILE
    CURRENT=$(cat $FILE)
    [ "$OLD" == "$CURRENT" ] && exit 1 || exit 0
