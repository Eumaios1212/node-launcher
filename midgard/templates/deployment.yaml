apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "midgard.fullname" . }}
  labels:
    {{- include "midgard.labels" . | nindent 4 }}
    app.kubernetes.io/component: midgard
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "midgard.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: midgard
  template:
    metadata:
      labels:
        {{- include "midgard.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: midgard
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "midgard.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-database
          image: busybox:1.28
          command: ['sh', '-c', "until nc -zv {{ include "midgard.fullname" . }}-timescaledb:{{ .Values.postgres.port }}; do echo waiting for timescale database; sleep 2; done"]
        - name: init-thor
          image: busybox:1.28
          command: ['sh', '-c', "until nc -zv {{ .Values.thorApi }}; do echo waiting for thor-api; sleep 2; done"]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/go/scripts/midgard.sh"]
          args: ["midgard", "-c", "/etc/midgard/config.json"]
          env:
            - name: CHAIN_API
              value: {{ .Values.thorApi }}
            - name: CHAIN_RPC
              value: {{ include "midgard.thorDaemon" . }}
            - name: PG_HOST
              value: {{ include "midgard.fullname" . }}-timescaledb
            - name: PG_PORT
              value: {{ .Values.postgres.port | quote }}
            - name: PG_DB
              value: {{ .Values.postgres.database }}
            - name: PG_USERNAME
              value: {{ .Values.postgres.username }}
            - name: PG_PASSWORD
              value: {{ .Values.postgres.password }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/health
              port: http
          readinessProbe:
            httpGet:
              path: /v1/health
              port: http
          resources:
            {{- toYaml .Values.resources.midgard | nindent 12 }}
      volumes:
        - name: scripts
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "midgard.fullname" . }}-timescaledb
  labels:
    {{- include "midgard.labels" . | nindent 4 }}
    app.kubernetes.io/component: timescaledb
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "midgard.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: timescaledb
  template:
    metadata:
      labels:
        {{- include "midgard.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: timescaledb
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "midgard.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-timescaledb
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.timescaleDbImage.repository }}:{{ .Values.timescaleDbImage.tag }}
          imagePullPolicy: {{ .Values.timescaleDbImage.pullPolicy }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_USER
              value: {{ .Values.postgres.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          resources:
            {{- toYaml .Values.resources.timescaledb | nindent 12 }}
      volumes:
      - name: data
      {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "midgard.fullname" . }}{{- end }}
      {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: DirectoryOrCreate
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
