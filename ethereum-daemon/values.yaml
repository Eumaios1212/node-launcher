# Default values for ethereum-daemon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

net: mainnet

# Leveraging a checkpoint for the beacon chain will use less disk space and reduce sync
# time for the beacon chain to a few minutes (geth may still take hours or days). One
# provider list is found at https://eth-clients.github.io/checkpoint-sync-endpoints -
# you may select one from there or another source if desired. If you leverage a sync
# checkpoint it is important to note that the provider becomes a trusted party and
# should be verified by running `make verify-ethereum` after beacon sync shows 100%.
beaconCheckpointSyncUrl: ""

replicaCount: 1

image:
  eth:
    name: ethereum/client-go
    tag: "" # When tag is empty it defaults to the chart appVersion.
    hash: c601019e4426e1320d59631c0d55005c64da641455da97a0b79f89b617707685
  prysm:
    name: gcr.io/prysmaticlabs/prysm/beacon-chain
    tag: v4.0.7
    hash: a010137d82c1c58c1a3f5e7cb845ee3a43aac1ecaaf6edf70c3e083c58abfe3b
  scripts:
    repository: registry.gitlab.com/thorchain/thornode
    pullPolicy: IfNotPresent
    tag: mocknet

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8545

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts: []
    # - host: midgard.example.com
    #   paths:
    #   - path: /
    #     backend:
    #       serviceName: gateway
    #       servicePort: midgard
  tls: []
    # - secretName: midgard-tls
    #   hosts:
    #     - midgard.example.com

persistence:
  enabled: true
  size:
    testnet: 300Gi
    stagenet: 900Gi
    mainnet: 1792Gi
  accessMode: ReadWriteOnce
  # storageClass: "-"
  #
resources:
  limits:
    # cpu: 1
    memory: 12Gi
  requests:
    cpu: 2
    memory: 12Gi

nodeSelector: {}

tolerations: []

affinity: {}

# necessary for lint
global:
  images:
    alpine:
      tag: foo
      hash: bar
