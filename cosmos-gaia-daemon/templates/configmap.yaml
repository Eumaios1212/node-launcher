apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cosmos-daemon.fullname" . }}-scripts
data:    
  check-hardfork.sh: |
    #!/bin/sh

    apk add wget jq
    HARDFORK_HEIGHT={{ include "cosmos-daemon.hardforkHeight" . }}
    DEPLOYMENT_NAME={{ include "cosmos-daemon.fullname" . }}
    IMAGE_NAME={{ include "cosmos-daemon.image" . }}

    {{ .Values.app }} start --home /opt/cosmos --log_format json > /opt/cosmos/hardfork.json 2>&1 &
    COSMOS_PID=$!
    echo "Checking for current blockheight with cosmos daemon PID ($COSMOS_PID)"
    sleep 10

    STORE_HEIGHT=$(grep "ABCI Replay Blocks" /opt/cosmos/hardfork.json | jq .storeHeight)
    echo "Found store height: $STORE_HEIGHT, hardfork height: $HARDFORK_HEIGHT"
    
    IMAGE=$(kubectl get deployment $DEPLOYMENT_NAME -o jsonpath='{.spec.template.spec.containers[0].image}' | cut -d ":" -f 2)
    echo "Kubernetes image: $IMAGE"

    if [ "$STORE_HEIGHT" -eq "$HARDFORK_HEIGHT" ] && [ "$IMAGE"="v4.2.1" ]; then
      echo "Hardfork upgrade block height met. Patching app version..."
      wget https://dl.k8s.io/release/v1.22.2/bin/linux/amd64/kubectl -P /usr/bin
      chmod +x /usr/bin/kubectl
      NEW_IMAGE=$(echo $IMAGE_NAME | sed "s/v4.2.1/v5.0.7/g")
      kubectl set image deployment/$DEPLOYMENT_NAME {{ .Chart.Name }}=$NEW_IMAGE
    fi

    ps aux | grep "[f]$COSMOS_PID" && kill "$COSMOS_PID"


  init-daemon.sh: |
    #!/bin/sh
    set -ev

    if [ ! -f /opt/cosmos/config/genesis.json ]; then
      /usr/bin/$APP_NAME init thorchain --home /opt/cosmos
      cp /home/genesis.json /opt/cosmos/config/genesis.json
    fi