apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "binance-smart-daemon.fullname" . }}-scripts
data:
  init.sh: |
    #!/bin/sh

    set -euo pipefail

    # work in data mount
    cd /data

    # cleanup snapshot and exit if already started
    if [ -d geth/chaindata ]; then
      rm -f *.lz4
      rm -f *.zst
      rm -rf server
      chown -R 1000:1000 geth
      chmod -R +x geth
      exit 0
    fi

    # install dependencies
    apk add aria2 curl jq lz4 zstd

    # download snapshot
    snapshotMD=https://raw.githubusercontent.com/48Club/bsc-snapshots/main/README.md
    snapshotURL=$(curl -sL "$snapshotMD" | grep -Eo 'https:\/\/[a-zA-Z0-9.\/]+geth\.full\.[a-zA-Z0-9.]+')
    aria2c --continue --split=14 --max-connection-per-server=14 \
        --min-split-size=100M --out=snapshot.tar.zst "$snapshotURL"

    # decompress snapshot
    echo "Decompressing snapshot..."
    zstd -cd snapshot.tar.zst | tar xvf -

    # move data into place
    mkdir -p geth
    mv geth.full/geth/chaindata geth/chaindata
    mv geth.full/geth/triecache geth/triecache

    # cleanup snapshot
    rm -f *.lz4
    rm -f *.zst
    rm -rf server

  probe.sh: |
    #!/bin/sh

    FILE=/home/bsc/.probe_last_height

    SYNCING=$(geth attach --exec eth.syncing --datadir=data) || exit 1
    HEIGHT=$(geth attach --exec eth.blockNumber --datadir=data) || exit 1

    # first time we are syncing from scratch
    if [ "$HEIGHT" = "0" ]; then
      exit 0
    fi

    if [ ! -f "$FILE" ]; then
      echo "$HEIGHT" >$FILE
      echo "Not getting new blocks"
      exit 1
    fi

    OLD=$(cat $FILE)
    echo "$HEIGHT" >$FILE
    if [ "$OLD" = "$HEIGHT" ]; then
      echo "Not getting new blocks"
      exit 1
    fi
    exit 0
