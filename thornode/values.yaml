# Default values for thornode.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

net: mainnet
type: validator

signer:
  name: thorchain
  password: password
  mnemonicSecret: ""
  passwordSecret: ""

peer:
seeds:
peerApi:
ethRouterContract:
  testnet: "0xefA28233838f46a80AaaC8c309077a9ba70D123A"
  mainnet: "0xC145990E84155416144C532E31f89B840Ca8c2cE"
  stagenet: "0x23d040e8816FF628c54D357612420260301cAE85"

enableApi: true

debug: false
chainID:
  testnet: thorchain-testnet-v2
  mainnet: thorchain-mainnet-v1
  stagenet: thorchain-stagenet

haltHeight:

replicaCount: 1

strategyType: Recreate

image:
  repository: registry.gitlab.com/thorchain/thornode
  pullPolicy: IfNotPresent
  tag: mainnet

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port:
    api: 1317
    testnet:
      p2p: 26656
      rpc: 26657
    stagenet:
      p2p: 27146
      rpc: 27147
    mainnet:
      p2p: 27146
      rpc: 27147

persistence:
  enabled: true
  size:
    testnet: 300Gi
    stagenet: 1024Gi
    mainnet: 1024Gi
  accessMode: ReadWriteOnce
  # existingClaim: your-pvc
  # storageClass: "-"
  # hostPath: /host-path
  # subPath: subpath

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

priorityClassName: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  requests:
    cpu: 4
    memory: 4Gi
  limits:
    # cpu: 2
    # memory: 4Gi

nodeSelector: {}

tolerations: []

affinity: {}

global:
  gateway:
    enabled: false
