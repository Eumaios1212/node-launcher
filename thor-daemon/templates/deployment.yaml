apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thor-daemon.fullname" . }}
  labels:
    {{- include "thor-daemon.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "thor-daemon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "thor-daemon.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "thor-daemon.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}

      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}

      initContainers:
      - name: init-external-ip
        image: gcr.io/cloud-builders/kubectl:latest
        command: ['sh', '/scripts/external-ip.sh', '{{ .Values.hostNetwork }}', '{{ include "thor-daemon.fullname" . }}', '{{ include "thor-daemon.fullname" . }}-external-ip']
        volumeMounts:
        - name: scripts
          mountPath: /scripts
      - name: init-ulimitn
        image: busybox
        command: ['sh', '-c', 'ulimit -n 65536']
        securityContext:
          privileged: true
      {{- if default .Values.peer .Values.global.peer }}
      - name: init-peer
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -zv {{ default .Values.peer .Values.global.peer }}:{{ include "thor-daemon.rpc" . }}; do echo waiting for peer thor-daemon; sleep 2; done']
      {{- end }}
      {{- if .Values.peerApi }}
      - name: init-peer-api
        image: busybox:1.28
        command: ['sh', '-c', "until nc -zv {{ .Values.peerApi }}:1317; do echo waiting for peer thor-api; sleep 2; done"]
      {{- end }}
      {{- if default .Values.binanceDaemon .Values.global.binanceDaemon }}
      - name: init-binance
        image: appropriate/curl
        command: ['sh', '-c', "until curl -s {{ default .Values.binanceDaemon .Values.global.binanceDaemon }} > /dev/null; do echo waiting for binance-daemon; sleep 2; done"]
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "thor-daemon.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if default .Values.peer .Values.global.peer }}
          command: ["/scripts/validator.sh"]
          {{- else }}
          command: ["/scripts/genesis.sh"]
          {{- end }}

          {{- if .Values.debug }}
          args: ["thord", "start", "--trace", "--log_level", "*:debug", "--rpc.laddr", 'tcp://0.0.0.0:{{ include "thor-daemon.rpc" . }}']
          {{- else }}
          args: ["thord", "start", "--log_level", "main:info,state:debug,*:error", "--rpc.laddr", 'tcp://0.0.0.0:{{ include "thor-daemon.rpc" . }}']
          {{- end }}
          volumeMounts:
            - mountPath: /root/
              name: data
            {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
            {{- end }}
          env:
            - name: EXTERNAL_IP
              valueFrom:
                configMapKeyRef:
                  name: {{ include "thor-daemon.fullname" . }}-external-ip
                  key: externalIP
            - name: PEER
              value: {{ default .Values.peer .Values.global.peer }}
            - name: PEER_API
              value: {{ .Values.peerApi }}
            - name: BINANCE
              value: {{ default .Values.binanceDaemon .Values.global.binanceDaemon }}
            - name: SEED
              valueFrom:
                fieldRef:
                  {{- if .Values.hostNetwork }}
                  fieldPath: spec.nodeName
                  {{- else}}
                  fieldPath: metadata.name
                  {{- end }}
            - name: NET
              value: {{ include "thor-daemon.net" . }}
            - name: SIGNER_NAME
              value: {{ .Values.signer.name }}
            - name: SIGNER_PASSWD
              value: {{ .Values.signer.password }}
            {{- if default .Values.signer.mnemonic .Values.global.mnemonic }}
            - name: SIGNER_SEED_PHRASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "thor-daemon.fullname" . }}
                  key: mnemonic
            {{- end }}
          ports:
            - name: p2p
              containerPort: {{ include "thor-daemon.p2p" . }}
              protocol: TCP
            - name: rpc
              containerPort: {{ include "thor-daemon.rpc" . }}
              protocol: TCP
            - name: prometheus
              containerPort: 26660
              protocol: TCP
          startupProbe:
            httpGet:
              path: /status
              port: rpc
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            {{- if default .Values.peer .Values.global.peer }}
            initialDelaySeconds: 120
            {{- else }}
            initialDelaySeconds: 30
            {{- end }}
            httpGet:
              path: /status
              port: rpc
          readinessProbe:
            {{- if default .Values.peer .Values.global.peer }}
            initialDelaySeconds: 120
            {{- else }}
            initialDelaySeconds: 30
            {{- end }}
            httpGet:
              path: /status
              port: rpc
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: data
      {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "thor-daemon.fullname" . }}{{- end }}
      {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: DirectoryOrCreate
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: scripts
        configMap:
          name: {{ include "thor-daemon.fullname" . }}-scripts
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
